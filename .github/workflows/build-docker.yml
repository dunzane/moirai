name: Docker Build and Push (Strict Tag)

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        base-image-tag:
          - "1.4.0-py3.8.13-cuda10.1-ubuntu18.04"
          - "1.5.1-py3.8.13-cuda10.2-ubuntu18.04"
          - "1.6.0-py3.8.13-cuda10.2-ubuntu18.04"
          - "1.7.1-py3.9.12-cuda11.0-ubuntu18.04"
          - "1.8.1-py3.9.12-cuda11.1-ubuntu20.04"
          - "1.9.1-py3.9.12-cuda11.1-ubuntu20.04"
          - "1.10.2-py3.9.12-cuda11.3.1-ubuntu20.04"
          - "1.11.0-py3.9.12-cuda11.3.1-ubuntu20.04"
          - "1.12.1-py3.9.12-cuda11.6.2-ubuntu20.04"


    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Verify tag is on main branch
        run: |
          git fetch origin main
          if ! git branch -a --contains ${{ github.ref_name }} | grep -q 'origin/main'; then
            echo "Error: Tag ${{ github.ref_name }} is not on main branch!"
            exit 1
          fi

      - name: Set PIPEAI version
        run: |
          PIPEAI_VERSION=$(cd pipeai && python -c "from version import __version__; print(__version__)")
          echo "PIPEAI_VERSION=$PIPEAI_VERSION" >> $GITHUB_ENV
          echo "IMAGE_TAG=${{ matrix.base-image-tag }}" >> $GITHUB_ENV

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build \
            --build-arg IMAGE_TAG=${IMAGE_TAG} \
            -t dunzane/pipeai:${PIPEAI_VERSION}-${IMAGE_TAG} \
            -t dunzane/pipeai:latest-${IMAGE_TAG} \
            -f Dockerfile .
          
          docker push dunzane/pipeai:${PIPEAI_VERSION}-${IMAGE_TAG}
          docker push dunzane/pipeai:latest-${IMAGE_TAG}
          
          docker push ghcr.io/dunzane/pipeai:${PIPEAI_VERSION}-${IMAGE_TAG}
          docker push ghcr.io/dunzane/pipeai:latest-${IMAGE_TAG}